syntax = "proto3";
package raft;

service Raft {
    rpc Command (CommandRequest) returns (CommandResponse);

    rpc RequestVote (RequestVoteRequest) returns (RequestVoteResponse);
    rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse);
}

message AppendEntriesRequest {
    uint64 term = 1;
    uint64 leader_id = 2;
    uint64 prev_log_index = 3;
    uint64 prev_log_term = 4;
    repeated LogEntry entries = 5;
    uint64 leader_commit = 6;
}

message LogEntry {
    uint64 term = 1;
    uint64 index = 2;
    bytes command = 3;
}

message AppendEntriesResponse {
    uint64 term = 1;
    bool success = 2;
    uint64 match_index = 3;
}

message RequestVoteRequest {
    uint64 term = 1;
    uint64 candidate_id = 2;
    uint64 last_log_index = 3;
    uint64 last_log_term = 4;
}

message RequestVoteResponse {
    uint64 term = 1;
    bool vote_granted = 2;
}

message CommandRequest {
    enum CommandType {
        WRITE = 0;
        READ = 1;
    }
    CommandType type = 1;
    bytes data = 2;
}

message CommandResponse {
    enum Status {
        OK = 0;
        NOT_LEADER = 1;
        ERROR = 2;
    }
    Status status = 1;
    bytes data = 2;
    uint64 leader_hint = 3;  // If NOT_LEADER, contains leader's ID
    string error = 4;        // Error message if status is ERROR
}


